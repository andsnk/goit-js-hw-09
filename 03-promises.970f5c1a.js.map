{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAqBP,IAAMQ,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACN,IAAMC,EAAaC,OAAOP,EAAKQ,SAAShB,MAAMiB,OACxCC,EAAYH,OAAOP,EAAKQ,SAASG,KAAKF,OACtCG,EAASL,OAAOP,EAAKQ,SAASI,OAAOH,OAEvCH,EAAa,GAAKI,EAAY,GAAKE,GAAU,EAC/CC,EAAAzB,GAAS0B,OAAOC,QACd,kGA1BN,SAAwBT,EAAYI,EAAWE,GAC7C,IAAK,IAAII,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAEhC1B,EAAc0B,EADAV,GAAcU,EAAI,GAAKN,GAElCO,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBqB,EAAAzB,GAAS0B,OAAOK,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAH,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBqB,EAAAzB,GAAS0B,OAAOQ,QACd,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAmBnD+B,CAAejB,EAAYI,EAAWE,E,IAGtBX,SAASC,cAAc,sBAC/BC,iBAAiB,SAAS,SAAAC,GAClCJ,EAAKwB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction outputPromises(firstDelay, delayStep, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    const delay = firstDelay + (i - 1) * delayStep;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const firstDelay = Number(form.elements.delay.value);\n  const delayStep = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n\n  if (firstDelay < 0 || delayStep < 0 || amount <= 0) {\n    Notiflix.Notify.warning(\n      'Please enter a value not less than 0 for first delay, delay step and greater than 0 for amount'\n    );\n    return;\n  }\n  outputPromises(firstDelay, delayStep, amount);\n});\n\nconst clearForm = document.querySelector('.promise-clear-btn');\nclearForm.addEventListener('click', event => {\n  form.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","elements","value","delayStep","step","amount","$parcel$interopDefault","Notify","warning","i","then","param","success","concat","catch","failure","$ce04d3a99e08e73b$var$outputPromises","reset"],"version":3,"file":"03-promises.970f5c1a.js.map"}